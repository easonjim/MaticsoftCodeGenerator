<#@ template language="c#" HostSpecific="True" #>
<#@ output extension= ".cs" #>
<#
	ProcedureHost host = (ProcedureHost)(Host);
	ColumnInfo OutParameter = host.OutParameter;
	string returnValue = "bool";
    if (OutParameter!=null)
    {         
         returnValue = CodeCommon.DbTypeToCS(OutParameter.TypeName);              
    }
#>
		/* 生成存储过程的调用代码 , 只对存储过程有效*/
      			
		/// <summary>
		/// 
		/// </summary>
		public <#=returnValue#> <#= host.ProcedureName #>(<# for(int i=0;i< host.Parameterlist.Count;i++) { #><#= CodeCommon.DbTypeToCS(host.Parameterlist[i].TypeName)#> <#=host.Parameterlist[i].ColumnName.Replace("@","")#><# if(i< host.Parameterlist.Count-1 ) {#>,<# } #> <#}#> )
		{
			int rowsAffected;
			SqlParameter[] parameters = {			 
			 <# for(int i=0;i< host.Parameterlist.Count;i++) { #>
			 new SqlParameter("<#=host.Parameterlist[i].ColumnName#>", SqlDbType.VarChar,50)<# if(i< host.Parameterlist.Count-1 ) {#>,<# } #> 
			 <#}#>
			 };
			 <# for(int i=0;i< host.Parameterlist.Count;i++) {  #>
			 <# if(host.Parameterlist[i].Description=="isoutparam") { outIndex=i.ToString(); #>
			parameters[<#=i#>].Value = ParameterDirection.Output;
			<#} else {#>
			parameters[<#=i#>].Value = <#=host.Parameterlist[i].ColumnName.Replace("@","") #>; 
			<#}}#>
			DbHelperSQL.RunProcedure("<#= host.ProcedureName #>",parameters,out rowsAffected);
			<#  if (OutParameter!=null) { #>
			return (<#=returnValue#>)parameters[<#=outIndex#>].Value;
			<#} else {#>
			if (rowsAffected > 0)
			{
				return true;
			}
			else
			{
				return false;
			}
			<#}#>}
   

<#+
string outIndex ="0";
#>